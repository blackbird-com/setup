#!/bin/bash

#!/bin/bash

## GENERAL METHOD

yuros_cryto_head() {
	clear
	echo '
   ____________  ______  ________________ 
  / ____/ __ \ \/ / __ \/_  __/ ____/ __ \
 / /   / /_/ /\  / /_/ / / / / __/ / /_/ /
/ /___/ _, _/ / / ____/ / / / /___/ _, _/ 
\____/_/ |_| /_/_/     /_/ /_____/_/ |_|  

Development by null@2024 - yuros sectools'
}

## params :
## 		1. $1 = volume

yuros_crypto_chek() {

	if [[ -z $1 ]]; then
		echo "error, volume variable is null."
		exit
	fi
}

## params :
## 		1. $1 = usrdir
yuros_crypto_accs() {
	sudo chown -R $USER:$USER $1 &&
		sudo chmod -R 700 $1
	if [[ -d $1/lost+found ]]; then
		rm -fr $1/lost+found
	fi
}

## params :
## 		1. $1 = volume
## 		2. $2 = mapper
## 		3. $3 = usrdir
yuros_crypto_udir() {
	echo ""
	echo "---------------------------------------------"
	sudo cryptsetup luksOpen /dev/$1 $2 &&
		sleep 2
	if [[ ! -d $3 ]]; then
		sudo mkdir $3
	fi
	sudo mount /dev/mapper/$2 $3 &&
		sleep 1
}

yuros_crypto_desc() {
	echo "---------------------------------------------"
	echo " $1"
	echo ""
}

yuros_crypto_stat() {
	echo "    ---> $1"
}

yuros_crypto_stop() {
	echo ""
	echo " $1"
	echo "---------------------------------------------"
	echo ""
}

## params :
## 		1. $1 = usrdir
## 		1. $2 = mapper
yuros_crypto_umnt() {
	sudo umount $1 &&
	yuros_crypto_desc "Ecnrypt crypto volume" &&
	sleep 2
	yuros_crypto_stat "paritition is umounted"
	sudo cryptsetup luksClose /dev/mapper/$2 &&
	sleep 1
	yuros_crypto_stat "partition is locked"
	sudo rm -fr $1
	yuros_crypto_stat "user directory clean"
	yuros_crypto_stop "Crypto volume encrypted"
}

## CRYPTO MOUNTER
yuros_crypto_keys() {
	volume="sda3"
	mapper="crypt_keys"
	usrdir="$HOME/.local/cryptkeys"
	valdir=("gpg" "ssh" "dbx" "ssl" "rec")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head &&
	if [[ $(sudo mountpoint -qd $usrdir) ]]; then
		yuros_crypto_umnt $usrdir $mapper &&
		rm -fr /home/$USER/.ssh
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
			yuros_crypto_desc "Decrypt keys crypto volume" &&
			for dir in "${valdir[@]}"; do
				if [[ ! -d $usrdir/$dir ]]; then
					sudo mkdir $usrdir/$dir
				fi
				yuros_crypto_stat "$dir directory is ready"
			done
		yuros_crypto_accs $usrdir $mapper
		if [[ -d /home/$USER/.ssh ]]; then
			rm -fr $HOME/.ssh
		fi
		ln -s $usrdir/ssh /home/$USER/.ssh
		yuros_crypto_stat "ssh directory sync"
		yuros_crypto_stop "Keys crypto volume is ready"
	fi
}

yuros_crypto_data() {
	volume="sda5"
	mapper="crypt_data"
	usrdir="$HOME/.local/cryptdat"
	valdir=("private" "family" "lectore" "lektorid" "ropeaccess" "lektorco" "datamaster" "uinjkt")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head &&
	if [[ $(sudo mountpoint -qd $usrdir) ]]; then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/datum
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"; do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper
		ln -sf $usrdir ~/datum
		yuros_crypto_stop "File crypto directory ready"
	fi
}

yuros_crypto_devs() {
	volume="sda6"
	mapper="crypt_devs"
	usrdir="$HOME/.local/cryptapp"
	valdir=("webbase" "android" "iphone" "linux" "windows" "compose")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head &&
	if [[ $(sudo mountpoint -qd $usrdir) ]]; then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/devel

	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"; 
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper
		ln -sf $usrdir ~/devel
		yuros_crypto_stop "File crypto directory ready"

	fi
}

yuros_crypto_virt() {

	volume="sda8"
	mapper="crypt_virt"
	usrdir="$HOME/.local/cryptvir"
	valdir=("testing" "production" "proto" "yuvirt")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head &&
	if [[ $(sudo mountpoint -qd $usrdir) ]]; then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/vmhost
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"; do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper
		ln -fs $usrdir/yuvirt ~/vmhost
		yuros_crypto_stop "File crypto directory ready"
	fi
}

yuros_crypto_pods() {
	echo "currently not available"
}

yuros_crypto_dock() {

	volume="sda7"
	mapper="crypt_cont"
	usrdir="/var/lib/docker"
	valdir=("containers" "image" "volumes")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head

	if [[ $(sudo mountpoint -qd /run/media/$USER/docker/) ]]; then

		yuros_crypto_desc "Ecnrypt docker crypto volume"

		if [[ ! -z  $( sudo docker ps -q ) ]];then
			sudo docker kill $(sudo docker ps -q ) > /dev/null 2>&1
			yuros_crypto_stat "Terminate all docker activity"
		fi
		
		sudo systemctl stop docker > /dev/null 2>&1
		yuros_crypto_stat "Disable docker service"
		sleep 1 &&

		sudo systemctl stop docker.socket > /dev/null 2>&1
		yuros_crypto_stat "Disable docker socket"
		sleep 1 &&

		for dir in "${valdir[@]}"; do
			if [[ $(sudo mountpoint -qd /var/lib/docker/$dir) ]]; then
				sudo umount -R /var/lib/docker/$dir 
				sleep 1
				yuros_crypto_stat "$dir docker is unmounted"
			fi
		done

		sudo umount -R /run/media/$USER/docker
		yuros_crypto_stat "Umount docker volume"
		sleep 1

		sudo cryptsetup luksClose /dev/mapper/$mapper
		yuros_crypto_stat "Remove docker mapper"
		sleep 1

		sudo rm -fr /run/media/$USER/docker
		yuros_crypto_stat "Cleanup user space"
		yuros_crypto_stop "Docker crypto volume is encrypted"

	else

		sudo cryptsetup luksOpen /dev/$volume $mapper &&
		sleep 2
		yuros_crypto_desc "Decrypt file crypto volume"
		yuros_crypto_stat "Encrypted volume decrypted"


		if [[ ! -d /run/media/$USER ]]; then
			sudo mkdir /run/media/$USER
			yuros_crypto_stat "Docker media user created"
		fi
		sleep 1

		if [[ ! -d /run/media/$USER/docker ]]; then
			sudo mkdir /run/media/$USER/docker
			yuros_crypto_stat "Docker media sub directory created"
		fi
		sleep 1

		if [[ ! $(sudo mountpoint -qd /run/media/$USER/docker) ]]; then
			sudo mount /dev/mapper/$mapper /run/media/$USER/docker
			yuros_crypto_stat "Mount crypto volume to user media"
		fi

		if [[ ! -d /var/lib/docker ]]; then
			echo 'Docker directory not found, please check your docker installation'
			exit
		fi

		for dir in "${valdir[@]}"; do

			if [[ ! -d /run/media/$USER/docker/$dir ]];then
				sudo mkdir /run/media/$USER/docker/$dir
			fi

			if [[ ! $(sudo mountpoint -qd /var/lib/docker/$dir) ]]; then
				sudo mount --bind /run/media/$USER/docker/$dir /var/lib/docker/$dir
				yuros_crypto_stat "$dir directory is mounted"
			else
				yuros_crypto_stat "$dir directory is ready"
			fi
		done

		sudo systemctl start docker &&
		yuros_crypto_stat "Docker service is ready"
		sleep 1

		yuros_crypto_stop "Docker volume crypto directory ready"
	fi
}

yuros_crypto_game() {
	volume=""
	mapper="crypt_game"
	usrdir="$HOME/.local/cryptjoy"
	valdir=("steam" "ubisoft" "epic" "ninwii" "switch" "ps2")

	cd $HOME &&
	yuros_crypto_chek $volume &&
	yuros_cryto_head &&
	if [[ $(sudo mountpoint -qd $usrdir) ]]; then
		yuros_crypto_umnt $usrdir $mapper
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"; 
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper
		yuros_crypto_stop "File crypto directory ready"
	fi
}

function yuros_crypter() {
	if [[ "keys" == "$1" ]]; then
		yuros_crypto_keys
	elif [[ "devel" == "$1" ]]; then
		yuros_crypto_devs
	elif [[ "data" == "$1" ]]; then
		yuros_crypto_data
	elif [[ "game" == "$1" ]]; then
		yuros_crypto_game
	elif [[ "vhost" == "$1" ]]; then
		yuros_crypto_virt
	elif [[ "podman" == "$1" ]]; then
		yuros_crypto_pods
	elif [[ "docker" == "$1" ]]; then
		yuros_crypto_dock
	fi
}

yuros_crypter $1
